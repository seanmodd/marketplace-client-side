[{"/Users/seanmodd/Dev/AirClone/fullstack/client/src/index.js":"1","/Users/seanmodd/Dev/AirClone/fullstack/client/src/reportWebVitals.js":"2","/Users/seanmodd/Dev/AirClone/fullstack/client/src/App.js":"3","/Users/seanmodd/Dev/AirClone/fullstack/client/src/reducers/index.js":"4","/Users/seanmodd/Dev/AirClone/fullstack/client/src/components/PrivateRoute.js":"5","/Users/seanmodd/Dev/AirClone/fullstack/client/src/booking/Home.js":"6","/Users/seanmodd/Dev/AirClone/fullstack/client/src/components/TopNav.js":"7","/Users/seanmodd/Dev/AirClone/fullstack/client/src/auth/Login.js":"8","/Users/seanmodd/Dev/AirClone/fullstack/client/src/hotels/ViewHotel.js":"9","/Users/seanmodd/Dev/AirClone/fullstack/client/src/user/DashboardSeller.js":"10","/Users/seanmodd/Dev/AirClone/fullstack/client/src/hotels/EditHotel.js":"11","/Users/seanmodd/Dev/AirClone/fullstack/client/src/stripe/StripeCallback.js":"12","/Users/seanmodd/Dev/AirClone/fullstack/client/src/hotels/SearchResult.js":"13","/Users/seanmodd/Dev/AirClone/fullstack/client/src/stripe/StripeCancel.js":"14","/Users/seanmodd/Dev/AirClone/fullstack/client/src/user/Dashboard.js":"15","/Users/seanmodd/Dev/AirClone/fullstack/client/src/hotels/NewHotel.js":"16","/Users/seanmodd/Dev/AirClone/fullstack/client/src/stripe/StripeSuccess.js":"17","/Users/seanmodd/Dev/AirClone/fullstack/client/src/auth/Register.js":"18","/Users/seanmodd/Dev/AirClone/fullstack/client/src/reducers/auth.js":"19","/Users/seanmodd/Dev/AirClone/fullstack/client/src/components/ConnectNav.js":"20","/Users/seanmodd/Dev/AirClone/fullstack/client/src/components/DashboardNav.js":"21","/Users/seanmodd/Dev/AirClone/fullstack/client/src/components/LoginForm.js":"22","/Users/seanmodd/Dev/AirClone/fullstack/client/src/components/RegisterForm.js":"23","/Users/seanmodd/Dev/AirClone/fullstack/client/src/actions/hotel.js":"24","/Users/seanmodd/Dev/AirClone/fullstack/client/src/actions/stripe.js":"25","/Users/seanmodd/Dev/AirClone/fullstack/client/src/components/forms/HotelEditForm.js":"26","/Users/seanmodd/Dev/AirClone/fullstack/client/src/components/forms/Search.js":"27","/Users/seanmodd/Dev/AirClone/fullstack/client/src/components/forms/HotelCreateForm.js":"28","/Users/seanmodd/Dev/AirClone/fullstack/client/src/components/cards/SmallCard.js":"29","/Users/seanmodd/Dev/AirClone/fullstack/client/src/actions/auth.js":"30","/Users/seanmodd/Dev/AirClone/fullstack/client/src/components/cards/BookingCard.js":"31","/Users/seanmodd/Dev/AirClone/fullstack/client/src/components/modals/OrderModal.js":"32"},{"size":1004,"mtime":1631495414205,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":1631495417875,"results":"35","hashOfConfig":"34"},{"size":2278,"mtime":1631510066371,"results":"36","hashOfConfig":"34"},{"size":168,"mtime":1631495432273,"results":"37","hashOfConfig":"34"},{"size":307,"mtime":1631495441845,"results":"38","hashOfConfig":"34"},{"size":865,"mtime":1631495474797,"results":"39","hashOfConfig":"34"},{"size":1136,"mtime":1631495440898,"results":"40","hashOfConfig":"34"},{"size":1680,"mtime":1631495480925,"results":"41","hashOfConfig":"34"},{"size":3438,"mtime":1631495435428,"results":"42","hashOfConfig":"34"},{"size":3465,"mtime":1631495425682,"results":"43","hashOfConfig":"34"},{"size":2955,"mtime":1631495438473,"results":"44","hashOfConfig":"34"},{"size":1196,"mtime":1631495428691,"results":"45","hashOfConfig":"34"},{"size":1246,"mtime":1631495437258,"results":"46","hashOfConfig":"34"},{"size":262,"mtime":1631495427672,"results":"47","hashOfConfig":"34"},{"size":1523,"mtime":1631495420977,"results":"48","hashOfConfig":"34"},{"size":2905,"mtime":1631495436425,"results":"49","hashOfConfig":"34"},{"size":1017,"mtime":1631495426868,"results":"50","hashOfConfig":"34"},{"size":1361,"mtime":1631495479180,"results":"51","hashOfConfig":"34"},{"size":406,"mtime":1631495433575,"results":"52","hashOfConfig":"34"},{"size":2206,"mtime":1631495444943,"results":"53","hashOfConfig":"34"},{"size":657,"mtime":1631495443801,"results":"54","hashOfConfig":"34"},{"size":871,"mtime":1631495442787,"results":"55","hashOfConfig":"34"},{"size":1188,"mtime":1631495439751,"results":"56","hashOfConfig":"34"},{"size":1782,"mtime":1631495484876,"results":"57","hashOfConfig":"34"},{"size":1628,"mtime":1631495484107,"results":"58","hashOfConfig":"34"},{"size":3150,"mtime":1631495447025,"results":"59","hashOfConfig":"34"},{"size":1879,"mtime":1631495446042,"results":"60","hashOfConfig":"34"},{"size":2841,"mtime":1631495447937,"results":"61","hashOfConfig":"34"},{"size":2875,"mtime":1631495458947,"results":"62","hashOfConfig":"34"},{"size":529,"mtime":1631495486096,"results":"63","hashOfConfig":"34"},{"size":2775,"mtime":1631495469183,"results":"64","hashOfConfig":"34"},{"size":607,"mtime":1611580948000,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jwbfn6",{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"/Users/seanmodd/Dev/AirClone/fullstack/client/src/index.js",[],"/Users/seanmodd/Dev/AirClone/fullstack/client/src/reportWebVitals.js",[],"/Users/seanmodd/Dev/AirClone/fullstack/client/src/App.js",[],"/Users/seanmodd/Dev/AirClone/fullstack/client/src/reducers/index.js",[],"/Users/seanmodd/Dev/AirClone/fullstack/client/src/components/PrivateRoute.js",[],["137","138"],"/Users/seanmodd/Dev/AirClone/fullstack/client/src/booking/Home.js",[],"/Users/seanmodd/Dev/AirClone/fullstack/client/src/components/TopNav.js",[],"/Users/seanmodd/Dev/AirClone/fullstack/client/src/auth/Login.js",[],"/Users/seanmodd/Dev/AirClone/fullstack/client/src/hotels/ViewHotel.js",["139","140"],"import React, {useState, useEffect} from 'react';\n// import { useStore } from \"react-redux\";\nimport {read, diffDays, isAlreadyBooked} from '../actions/hotel';\nimport {getSessionId} from '../actions/stripe';\nimport moment from 'moment';\nimport {useSelector} from 'react-redux';\nimport {loadStripe} from '@stripe/stripe-js';\n\nconst ViewHotel = ({match, history}) => {\n  const [hotel, setHotel] = useState({});\n  const [image, setImage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [alreadyBooked, setAlreadyBooked] = useState(false);\n\n  const {auth} = useSelector((state) => ({...state}));\n\n  useEffect(() => {\n    loadSellerHotel();\n  }, [loadSellerHotel]);\n\n  useEffect(() => {\n    if (auth && auth.token) {\n      isAlreadyBooked(auth.token, match.params.hotelId).then((res) => {\n        // console.log(res);\n        if (res.data.ok) setAlreadyBooked(true);\n      });\n    }\n  }, [auth, match.params.hotelId]);\n\n  const loadSellerHotel = async () => {\n    const res = await read(match.params.hotelId);\n    // console.log(res);\n    setHotel(res.data);\n    setImage(`${process.env.REACT_APP_API}/hotel/image/${res.data._id}`);\n  };\n\n  const handleClick = async (e) => {\n    e.preventDefault();\n\n    if (!auth || !auth.token) {\n      history.push('/login');\n      return;\n    }\n\n    setLoading(true);\n    if (!auth) history.push('/login');\n    // console.log(auth.token, match.params.hotelId);\n    const res = await getSessionId(auth.token, match.params.hotelId);\n    // console.log(\"get sessionid resposne\", res.data.sessionId);\n    const stripe = await loadStripe(process.env.REACT_APP_STRIPE_KEY);\n    stripe\n        .redirectToCheckout({\n          sessionId: res.data.sessionId,\n        })\n        .then((result) => console.log(result));\n  };\n\n  return (\n    <>\n      <div className=\"container-fluid bg-secondary p-5 text-center\">\n        <h1>{hotel.title}</h1>\n      </div>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <br />\n            <img src={image} alt={hotel.title} className=\"img img-fluid m-2\" />\n          </div>\n\n          <div className=\"col-md-6\">\n            <br />\n            <b>{hotel.content}</b>\n            <p className=\"alert alert-info mt-3\">${hotel.price}</p>\n            <p className=\"card-text\">\n              <span className=\"float-right text-primary\">\n                for {diffDays(hotel.from, hotel.to)}{' '}\n                {diffDays(hotel.from, hotel.to) <= 1 ? ' day' : ' days'}\n              </span>\n            </p>\n            <p>\n              From <br />{' '}\n              {moment(new Date(hotel.from)).format('MMMM Do YYYY, h:mm:ss a')}\n            </p>\n            <p>\n              To <br />{' '}\n              {moment(new Date(hotel.to)).format('MMMM Do YYYY, h:mm:ss a')}\n            </p>\n            <i>Posted by {hotel.postedBy && hotel.postedBy.name}</i>\n            <br />\n            <button\n              onClick={handleClick}\n              className=\"btn btn-block btn-lg btn-primary mt-3\"\n              disabled={loading || alreadyBooked}\n            >\n              {loading ?\n                'Loading...' :\n                alreadyBooked ?\n                'Already Booked' :\n                auth && auth.token ?\n                'Book Now' :\n                'Login to Book'}\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ViewHotel;\n","/Users/seanmodd/Dev/AirClone/fullstack/client/src/user/DashboardSeller.js",["141","142"],"import {useState, useEffect} from 'react';\nimport DashboardNav from '../components/DashboardNav';\nimport ConnectNav from '../components/ConnectNav';\nimport {Link} from 'react-router-dom';\nimport {useSelector} from 'react-redux';\nimport {HomeOutlined} from '@ant-design/icons';\nimport {createConnectAccount} from '../actions/stripe';\nimport {sellerHotels, deleteHotel} from '../actions/hotel';\nimport {toast} from 'react-toastify';\nimport SmallCard from '../components/cards/SmallCard';\n\nconst DashboardSeller = () => {\n  const {auth} = useSelector((state) => ({...state}));\n  const [hotels, setHotels] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    loadSellersHotels();\n  }, [loadSellersHotels]);\n\n  const loadSellersHotels = async () => {\n    const {data} = await sellerHotels(auth.token);\n    setHotels(data);\n  };\n\n  const handleClick = async () => {\n    setLoading(true);\n    try {\n      const res = await createConnectAccount(auth.token);\n      console.log(res); // get login link\n      window.location.href = res.data;\n    } catch (err) {\n      console.log(err);\n      toast.error('Stripe connect failed, Try again.');\n      setLoading(false);\n    }\n  };\n\n  const handleHotelDelete = async (hotelId) => {\n    if (!window.confirm('Are you sure?')) return;\n    deleteHotel(auth.token, hotelId).then((res) => {\n      toast.success('Hotel Deleted');\n      loadSellersHotels();\n    });\n  };\n\n  const connected = () => (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-md-10\">\n          <h2>Your Hotels</h2>\n        </div>\n        <div className=\"col-md-2\">\n          <Link to=\"/hotels/new\" className=\"btn btn-primary\">\n            + Add New\n          </Link>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        {hotels.map((h) => (\n          <SmallCard\n            key={h._id}\n            h={h}\n            showViewMoreButton={false}\n            owner={true}\n            handleHotelDelete={handleHotelDelete}\n          />\n        ))}\n      </div>\n    </div>\n  );\n\n  const notConnected = () => (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-md-3 text-center\">\n          <div className=\"p-5 pointer\">\n            <HomeOutlined className=\"h1\" />\n            <h4>Setup payouts to post hotel rooms</h4>\n            <p className=\"lead\">\n              MERN partners with stripe to transfer earnings to your bank\n              account\n            </p>\n            <button\n              disabled={loading}\n              onClick={handleClick}\n              className=\"btn btn-primary mb-3\"\n            >\n              {loading ? 'Processing...' : 'Setup Payouts'}\n            </button>\n            <p className=\"text-muted\">\n              <small>\n                You'll be redirected to Stripe to complete the onboarding\n                process.\n              </small>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <div className=\"container-fluid bg-secondary p-5\">\n        <ConnectNav />\n      </div>\n\n      <div className=\"container-fluid p-4\">\n        <DashboardNav />\n      </div>\n\n      {auth &&\n      auth.user &&\n      auth.user.stripe_seller &&\n      auth.user.stripe_seller.charges_enabled ?\n        connected() :\n        notConnected()}\n\n      {/* <pre>{JSON.stringify(auth, null, 4)}</pre> */}\n    </>\n  );\n};\n\nexport default DashboardSeller;\n","/Users/seanmodd/Dev/AirClone/fullstack/client/src/hotels/EditHotel.js",["143","144"],"import {useState, useEffect} from 'react';\nimport {toast} from 'react-toastify';\n// import { Select } from \"antd\";\nimport {read, updateHotel} from '../actions/hotel';\nimport {useSelector} from 'react-redux';\nimport HotelEditForm from '../components/forms/HotelEditForm';\n\n// const { Option } = Select;\n\nconst EditHotel = ({match}) => {\n  // redux\n  const {auth} = useSelector((state) => ({...state}));\n  const {token} = auth;\n  // state\n  const [values, setValues] = useState({\n    title: '',\n    content: '',\n    location: '',\n    price: '',\n    from: '',\n    to: '',\n    bed: '',\n  });\n  const [image, setImage] = useState('');\n  const [preview, setPreview] = useState(\n      'https://via.placeholder.com/100x100.png?text=PREVIEW',\n  );\n  // destructuring variables from state\n  const {title, content, price, from, to, bed, location} = values;\n\n  useEffect(() => {\n    loadSellerHotel();\n  }, [loadSellerHotel]);\n\n  const loadSellerHotel = async () => {\n    const res = await read(match.params.hotelId);\n    // console.log(res);\n    setValues({...values, ...res.data});\n    setPreview(`${process.env.REACT_APP_API}/hotel/image/${res.data._id}`);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const hotelData = new FormData();\n    hotelData.append('title', title);\n    hotelData.append('content', content);\n    hotelData.append('location', location);\n    hotelData.append('price', price);\n    image && hotelData.append('image', image);\n    hotelData.append('from', from);\n    hotelData.append('to', to);\n    hotelData.append('bed', bed);\n\n    try {\n      const res = await updateHotel(token, hotelData, match.params.hotelId);\n      console.log('HOTEL UPDATE RES', res);\n      toast.success(`${res.data.title} is updated`);\n    } catch (err) {\n      console.log(err);\n      toast.error(err.response.data.err);\n    }\n  };\n\n  const handleImageChange = (e) => {\n    // console.log(e.target.files[0]);\n    setPreview(URL.createObjectURL(e.target.files[0]));\n    setImage(e.target.files[0]);\n  };\n\n  const handleChange = (e) => {\n    setValues({...values, [e.target.name]: e.target.value});\n  };\n\n  return (\n    <>\n      <div className=\"container-fluid bg-secondary p-5 text-center\">\n        <h2>Edit Hotel</h2>\n      </div>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-10\">\n            <br />\n            <HotelEditForm\n              values={values}\n              setValues={setValues}\n              handleChange={handleChange}\n              handleImageChange={handleImageChange}\n              handleSubmit={handleSubmit}\n            />\n          </div>\n          <div className=\"col-md-2\">\n            <img\n              src={preview}\n              alt=\"preview_image\"\n              className=\"img img-fluid m-2\"\n            />\n            <pre>{JSON.stringify(values, null, 4)}</pre>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default EditHotel;\n","/Users/seanmodd/Dev/AirClone/fullstack/client/src/stripe/StripeCallback.js",["145","146"],"import {useEffect} from 'react';\nimport {LoadingOutlined} from '@ant-design/icons';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {getAccountStatus} from '../actions/stripe';\nimport {updateUserInLocalStorage} from '../actions/auth';\n\nconst StripeCallback = ({history}) => {\n  const {auth} = useSelector((state) => ({...state}));\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (auth && auth.token) accountStatus();\n  }, [auth, accountStatus]);\n\n  const accountStatus = async () => {\n    try {\n      const res = await getAccountStatus(auth.token);\n      // console.log(\"USER ACCOUNT STATUS ON STRIPE CALLBACK\", res);\n      // update user in local storage\n      updateUserInLocalStorage(res.data, () => {\n        // update user in redux\n        dispatch({\n          type: 'LOGGED_IN_USER',\n          payload: res.data,\n        });\n        // redirect user to dashboard\n        window.location.href = '/dashboard/seller';\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className=\"d-flex justify-content-center p-5\">\n      <LoadingOutlined className=\"display-1 p-5 text-danger\" />\n    </div>\n  );\n};\n\nexport default StripeCallback;\n","/Users/seanmodd/Dev/AirClone/fullstack/client/src/hotels/SearchResult.js",[],"/Users/seanmodd/Dev/AirClone/fullstack/client/src/stripe/StripeCancel.js",[],"/Users/seanmodd/Dev/AirClone/fullstack/client/src/user/Dashboard.js",["147","148"],"import DashboardNav from '../components/DashboardNav';\nimport ConnectNav from '../components/ConnectNav';\nimport {Link} from 'react-router-dom';\nimport {userHotelBookings} from '../actions/hotel';\nimport {useSelector} from 'react-redux';\nimport {useState, useEffect} from 'react';\nimport BookingCard from '../components/cards/BookingCard';\n\nconst Dashboard = () => {\n  const {\n    auth: {token},\n  } = useSelector((state) => ({...state}));\n  const [booking, setBooking] = useState([]);\n\n  useEffect(() => {\n    loadUserBookings();\n  }, [loadUserBookings]);\n\n  const loadUserBookings = async () => {\n    const res = await userHotelBookings(token);\n    console.log(res);\n    setBooking(res.data);\n  };\n\n  return (\n    <>\n      <div className=\"container-fluid bg-secondary p-5\">\n        <ConnectNav />\n      </div>\n\n      <div className=\"container-fluid p-4\">\n        <DashboardNav />\n      </div>\n\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-10\">\n            <h2>Your Bookings</h2>\n          </div>\n          <div className=\"col-md-2\">\n            <Link to=\"/\" className=\"btn btn-primary\">\n              Browse Hotels\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        {booking.map((b) => (\n          <BookingCard\n            key={b._id}\n            hotel={b.hotel}\n            session={b.session}\n            orderedBy={b.orderedBy}\n          />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Dashboard;\n","/Users/seanmodd/Dev/AirClone/fullstack/client/src/hotels/NewHotel.js",[],"/Users/seanmodd/Dev/AirClone/fullstack/client/src/stripe/StripeSuccess.js",[],"/Users/seanmodd/Dev/AirClone/fullstack/client/src/auth/Register.js",[],"/Users/seanmodd/Dev/AirClone/fullstack/client/src/reducers/auth.js",[],"/Users/seanmodd/Dev/AirClone/fullstack/client/src/components/ConnectNav.js",[],"/Users/seanmodd/Dev/AirClone/fullstack/client/src/components/DashboardNav.js",[],"/Users/seanmodd/Dev/AirClone/fullstack/client/src/components/LoginForm.js",[],"/Users/seanmodd/Dev/AirClone/fullstack/client/src/components/RegisterForm.js",[],"/Users/seanmodd/Dev/AirClone/fullstack/client/src/actions/hotel.js",[],"/Users/seanmodd/Dev/AirClone/fullstack/client/src/actions/stripe.js",[],"/Users/seanmodd/Dev/AirClone/fullstack/client/src/components/forms/HotelEditForm.js",[],"/Users/seanmodd/Dev/AirClone/fullstack/client/src/components/forms/Search.js",[],"/Users/seanmodd/Dev/AirClone/fullstack/client/src/components/forms/HotelCreateForm.js",[],"/Users/seanmodd/Dev/AirClone/fullstack/client/src/components/cards/SmallCard.js",[],"/Users/seanmodd/Dev/AirClone/fullstack/client/src/actions/auth.js",[],"/Users/seanmodd/Dev/AirClone/fullstack/client/src/components/cards/BookingCard.js",["149"],"import {useState} from 'react';\nimport {currencyFormatter} from '../../actions/stripe';\nimport {diffDays} from '../../actions/hotel';\nimport {useHistory} from 'react-router-dom';\n\nimport OrderModal from '../modals/OrderModal';\n\nconst BookingCard = ({hotel, session, orderedBy}) => {\n  const [showModal, setShowModal] = useState(false);\n\n  // const history = useHistory();\n  return (\n    <>\n      <div className=\"card mb-3\">\n        <div className=\"row no-gutters\">\n          <div className=\"col-md-4\">\n            {hotel.image && hotel.image.contentType ? (\n              <img\n                src={`${process.env.REACT_APP_API}/hotel/image/${hotel._id}`}\n                alt=\"default hotel view\"\n                className=\"card-image img img-fluid\"\n              />\n            ) : (\n              <img\n                src=\"https://via.placeholder.com/900x500.png?text=MERN+Booking\"\n                alt=\"default hotel view\"\n                className=\"card-image img img-fluid\"\n              />\n            )}\n          </div>\n          <div className=\"col-md-8\">\n            <div className=\"card-body\">\n              <h3 className=\"card-title\">\n                {hotel.title}{' '}\n                <span className=\"float-right text-primary\">\n                  {currencyFormatter({\n                    amount: hotel.price * 100,\n                    currency: 'usd',\n                  })}\n                </span>{' '}\n              </h3>\n              <p className=\"alert alert-info\">{hotel.location}</p>\n              <p className=\"card-text\">{`${hotel.content.substring(\n                  1,\n                  200,\n              )}...`}</p>\n              <p className=\"card-text\">\n                <span className=\"float-right text-primary\">\n                  for {diffDays(hotel.from, hotel.to)}{' '}\n                  {diffDays(hotel.from, hotel.to) <= 1 ? ' day' : ' days'}\n                </span>\n              </p>\n              <p className=\"card-text\">{hotel.bed} seats</p>\n              <p className=\"card-text\">\n                Available from {new Date(hotel.from).toLocaleDateString()}\n              </p>\n\n              {showModal && (\n                <OrderModal\n                  session={session}\n                  orderedBy={orderedBy}\n                  showModal={showModal}\n                  setShowModal={setShowModal}\n                />\n              )}\n\n              <div className=\"d-flex justify-content-between h4\">\n                <button\n                  onClick={() => setShowModal(!showModal)}\n                  className=\"btn btn-primary\"\n                >\n                  Show Payment info\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default BookingCard;\n","/Users/seanmodd/Dev/AirClone/fullstack/client/src/components/modals/OrderModal.js",[],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":19,"column":7,"nodeType":"156","messageId":"157","endLine":19,"endColumn":22},{"ruleId":"158","severity":1,"message":"159","line":30,"column":9,"nodeType":"160","endLine":35,"endColumn":4},{"ruleId":"154","severity":1,"message":"161","line":19,"column":7,"nodeType":"156","messageId":"157","endLine":19,"endColumn":24},{"ruleId":"158","severity":1,"message":"162","line":21,"column":9,"nodeType":"160","endLine":24,"endColumn":4,"suggestions":"163"},{"ruleId":"154","severity":1,"message":"155","line":33,"column":7,"nodeType":"156","messageId":"157","endLine":33,"endColumn":22},{"ruleId":"158","severity":1,"message":"164","line":35,"column":9,"nodeType":"160","endLine":40,"endColumn":4},{"ruleId":"154","severity":1,"message":"165","line":13,"column":13,"nodeType":"156","messageId":"157","endLine":13,"endColumn":26},{"ruleId":"158","severity":1,"message":"166","line":15,"column":9,"nodeType":"160","endLine":32,"endColumn":4},{"ruleId":"154","severity":1,"message":"167","line":17,"column":7,"nodeType":"156","messageId":"157","endLine":17,"endColumn":23},{"ruleId":"158","severity":1,"message":"168","line":19,"column":9,"nodeType":"160","endLine":23,"endColumn":4},{"ruleId":"169","severity":1,"message":"170","line":4,"column":9,"nodeType":"156","messageId":"171","endLine":4,"endColumn":19},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"no-use-before-define","'loadSellerHotel' was used before it was defined.","Identifier","usedBeforeDefined","react-hooks/exhaustive-deps","The 'loadSellerHotel' function makes the dependencies of useEffect Hook (at line 19) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'loadSellerHotel' in its own useCallback() Hook.","VariableDeclarator","'loadSellersHotels' was used before it was defined.","The 'loadSellersHotels' function makes the dependencies of useEffect Hook (at line 19) change on every render. To fix this, wrap the definition of 'loadSellersHotels' in its own useCallback() Hook.",["174"],"The 'loadSellerHotel' function makes the dependencies of useEffect Hook (at line 33) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'loadSellerHotel' in its own useCallback() Hook.","'accountStatus' was used before it was defined.","The 'accountStatus' function makes the dependencies of useEffect Hook (at line 13) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'accountStatus' in its own useCallback() Hook.","'loadUserBookings' was used before it was defined.","The 'loadUserBookings' function makes the dependencies of useEffect Hook (at line 17) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'loadUserBookings' in its own useCallback() Hook.","no-unused-vars","'useHistory' is defined but never used.","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},"Wrap the definition of 'loadSellersHotels' in its own useCallback() Hook.",{"range":"177","text":"178"},[769,858],"useCallback(async () => {\n    const {data} = await sellerHotels(auth.token);\n    setHotels(data);\n  })"]